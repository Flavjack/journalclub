---
title: "Implementing a journal club as a teaching-learning strategy for plant genetics lectures during the COVID-19 pandemic"
format:
  html:
    toc: true
    toc-location: left
    number-sections: true
    self-contained: true
    output-file: "ESM_3"
editor_options: 
  chunk_output_type: console
execute: 
  warning: false
  echo: true
---

# Setup

```{r}
#| label:  setup

library(emmeans) 
library(multcomp)
source('https://inkaverse.com/setup.r')

session_info()
```

# JC pipeline

```{r}
library(magick)

pipeline <- image_read_pdf("files/pipeline.pdf") %>% 
  image_crop("1350x1500")

pipeline %>% 
  image_write(format = "pdf", "files/Fig1.pdf")
  
include_graphics("files/Fig1.pdf")
```

# Import data

```{r}
gsh1 <- "https://docs.google.com/spreadsheets/d/1yh44GeIx0mLttMmgFSuQ-aNGLRO9yewaq8MWAclnznE/edit#gid=111798384"
# browseURL(gsh)
gs_score <- as_sheets_id(gsh1)

gsh2 <- "https://docs.google.com/spreadsheets/d/1G2hvWcnEMCrrvR_J0_j2IBpAUELx1dAhTaOK8eObBK8/edit#gid=1412841139"
# browseURL(gsh)
gs_survey <- as_sheets_id(gsh2)
```

# Googlesheets connect to surveys

```{r}
e21.2 <- gs_survey %>% 
  range_read("S21-2") %>% 
  select("Curso",  matches("Herramientas|artículos|club")) %>% 
  rename_with(~gsub("Sobre los artículos"
                   , "Sobre el club de lectura (Journal Club)"
                   , x = .x)) %>% 
  rename_with(~gsub("Herramientas que aprendí en el curso"
                   , "Herramientas que aprendí durante el curso"
                   , x = .x)) %>% 
  rename_with(~gsub("Opinion, comentario y/o recomendaciones sobre los artículos" 
                   , "Opinión, comentario y/o recomendaciones para el club de lectura (Journal Club)"
                   , x = .x)) %>% 
  mutate(year = "2021-2", .before = Curso)


e22.1 <- gs_survey %>% 
  range_read("S22-1") %>% 
  select("Curso",  matches("Herramientas|artículos|club")) %>% 
  rename_with(~gsub("Sobre los artículos"
                   , "Sobre el club de lectura (Journal Club)"
                   , x = .x)) %>% 
  rename_with(~gsub("Herramientas que aprendí en el curso"
                   , "Herramientas que aprendí durante el curso"
                   , x = .x)) %>% 
  rename_with(~gsub("Opinion, comentario y/o recomendaciones sobre los artículos" 
                   , "Opinión, comentario y/o recomendaciones para el club de lectura (Journal Club)"
                   , x = .x)) %>% 
    mutate(year = "2022-1", .before = Curso)

fb <- list(e21.2, e22.1) %>% 
  bind_rows() %>% 
  select(!contains("Sobre el curso [Herramientas usadas]")) %>% 
  mutate(across(where(is.character), ~na_if(., "Aprendí a usar"))) %>% 
  mutate(across(where(is.character), ~na_if(., "Aprendí a usar, Relevante para mi formación"))) %>% 
  relocate(contains("Opinión"), .after = last_col()) %>% 
  dplyr::filter(grepl(pattern = "fito", x = Curso, ignore.case = T))

names(fb)

fb %>%
  web_table()
```

# Summary by question

```{r}
lbl <- gs_score %>% 
  range_read("survey") %>% 
  select(Pregunta, Question) %>%
  mutate(across(Pregunta, ~gsub("\\¿|\\?", "", .))) %>% 
  deframe() 
```

```{r}
qst <- fb %>% 
  select(matches("Sobre")) %>% 
  rownames_to_column() %>% 
  pivot_longer(!rowname) %>% 
  mutate(name = gsub(".*\\[(.*)\\]", "\\1", name)) %>% 
  group_by(name, value) %>% 
  summarise(n = n()) %>% 
  mutate(per = n/90*100) %>% 
  ungroup() %>% 
  mutate(nval = case_when(
    value %in% "Si" ~ 1
    , value %in% "Poco/Regular" ~ 2
    , value %in% "No" ~ 3
    , TRUE ~ 4
  )) %>% 
  mutate(nqs = case_when(
    name %in% "Estas de acuerdo con su implementación" ~ 1
    , name %in% "Consideras relevantes para tu formación" ~ 2
    , name %in% "Te gustarón los artículos" ~ 3
    , name %in% "El número de artículos fue adecuado" ~ 4
    , name %in% "Deberiamos leer más artículos" ~ 5
    , name %in% "Deberiamos leer menos artículos" ~ 6
    , name %in% "El tiempo para cada JC fue adecuado" ~ 7
    , name %in% "Los artículos eran difíciles de entender" ~ 8
    )) %>% 
  arrange(nqs, nval) %>% 
  mutate(value = factor(value, levels = unique(value))) %>% 
  mutate(name = factor(name, levels = unique(name)))

qst %>% str()

qst %>% web_table()

plot <- qst %>% 
  plot_smr(x = "name"
           , y = "per"
           , group = "value"
           , ylimits = c(0, 101, 10)
           , xlab = ""
           , ylab = "Percentage ('%')"
           , glab = "Answers"
           , color = c("#669933", "#FFCC00", "#CC3333", "gray")
           , gtext = c("Yes", "Few/Regular", "No", "NA")
           ) +
  geom_bar(stat = "identity", position = position_stack(reverse = TRUE)) +
  scale_x_discrete(labels = lbl) + 
  coord_flip() +
  geom_hline(yintercept = 75, color = "black", linewidth = 0.5, linetype="dashed")

plot %>% 
  ggsave2(filename = c("files/Fig2.pdf")
         , plot = ., width = 20, height = 12, units = "cm")

include_graphics("files/Fig2.pdf")
```

# Tools use Wordcloud

```{r}
library(wordcloud)

recode <- c("Google académico" = "Google Scholar"
            , "Tablas dinámicas" = "Pivot table")

text <- fb %>% 
  rename(tools = "Herramientas que aprendí durante el curso") %>% 
  select(tools) %>% 
  separate_rows(tools, sep = ",") %>% 
  mutate(across(everything(), ~ trimws(.))) %>% 
  drop_na() %>% 
  group_by(tools) %>% 
  summarise(n = n()) %>% 
  arrange(desc(n)) %>% 
  mutate(freq = n/sum(n)*100) %>% 
  mutate(tools = recode(tools, !!!recode))

set.seed(2)

pdf("files/Fig3.pdf", width = 20/2.5, height = 20/2.5)
wordcloud(words = text$tools
          , freq = text$freq
          , scale = c(5,0.5)
          , min.freq = 1
          , random.order = FALSE 
          , colors = rev(c("forestgreen", "blue", "orange", "purple", "gray"))
          )
graphics.off()

include_graphics("files/Fig3.pdf")
```

# Googlesheets connect to scores

```{r}
s21.2 <- gs_score %>% 
  range_read("s21.2") %>% 
  select(matches("correo|JC-")) %>% 
  rename_with(~gsub("Dirección de correo"
                   , "user"
                   , x = .x)) %>% 
  pivot_longer(!user, names_to = "jc", values_to = "score") %>% 
  mutate(across(everything(), as.character)) %>% 
  mutate(across(where(is.character), ~na_if(., "-"))) %>% 
  mutate(section = gsub(".*\\_(.*).*\\(Real\\)", "\\1", jc), .after = user) %>% 
  mutate(across(c(user, jc), ~gsub("\\D", "", .x))) %>% 
  mutate(across(score, as.numeric)) %>% 
  drop_na(score) %>% 
  mutate(year = "2021-2", .before = user)

s22.1 <- gs_score %>% 
  range_read("s22.1") %>% 
  select(matches("correo|JC-")) %>% 
  rename_with(~gsub("Dirección de correo"
                   , "user"
                   , x = .x)) %>% 
  pivot_longer(!user, names_to = "jc", values_to = "score") %>% 
  mutate(across(everything(), as.character)) %>% 
  mutate(across(where(is.character), ~na_if(., "-"))) %>% 
  mutate(section = gsub(".*\\((.*)\\).*\\(Real\\)", "\\1", jc), .after = user) %>% 
  mutate(across(c(user, jc), ~gsub("\\D", "", .x))) %>% 
  mutate(across(score, as.numeric)) %>% 
  drop_na(score) %>% 
  mutate(year = "2022-1", .before = user)
  
scores <- list(s21.2, s22.1) %>% 
  bind_rows() %>% 
  mutate(across(where(is.character), trimws))

scores$user %>%
  unique() %>% 
  length()

str(scores)

scores %>% web_table()

model <- scores %>% 
  lm(score ~ jc*section*year, data = .)

anova(model)

mc <- emmeans(model, ~ jc | section | year) %>% 
  cld(Letters = letters, reversed = T)

mc

plot <- mc %>% 
  plot_smr(type = "line"
           , x = "jc"
           , y = "emmean"
           , group = "section"
           , ylimits = c(14, 20, 1)
           , ylab = "Score (0-20)"
           , xlab = "Journal Club"
           , glab = "Section"
           , sig = ".group"
           # , error = "ste"
           ) +
  facet_wrap(. ~ year, ncol = 2)

plot

plot %>% 
  ggsave2(filename = "files/Fig4.pdf"
         , plot = ., width = 30, height = 12, units = "cm")

include_graphics("files/Fig4.pdf")
```

# Image pdf to png

```{r}
library(tiff)

pdf2tiff <- list.files("files/", pattern = "Fig.*pdf", full.names = T) 

imgs <- 1:length(pdf2tiff) %>% map(\(x) {
  
  filename <- pdf2tiff[x] %>% gsub(".pdf", "\\1.png", .) 
  
  pdf2tiff[x] %>% 
    image_read_pdf() %>% 
    image_write(format = "png", filename)
  
})
```


